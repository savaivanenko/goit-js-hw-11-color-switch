{"version":3,"sources":["webpack:///./JS/task-2.1.js","webpack:///./JS/colors.js","webpack:///./JS/task-1.js","webpack:///./JS/task-3.timer.js","webpack:///./JS/task-2.2.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then","colors","refs","body","document","querySelector","start","stop","setRandomColor","randomColor","min","max","length","Math","floor","random","style","background","intervalId","addEventListener","setInterval","disabled","clearInterval","days","hours","mins","secs","pad","value","String","padStart","futureDate","Date","currentDate","now","textContent","updateClock","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table"],"mappings":"mGAAA,MAAMA,EAAQC,GACL,IAAIC,QAAS,CAACC,EAASC,KAC5BC,WAAW,KAAKF,EAAQF,IAAQA,KAK9BK,EAASC,GAAQC,QAAQC,IAAK,kBAAiBF,OAGrDP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ,I,mDCHFK,MATA,CACb,UACA,UACA,UACA,UACA,UACA,WCJF,MAAMC,EAAO,CACXC,KAAOC,SAASC,cAAc,QAC9BC,MAAQF,SAASC,cAAc,yBAC/BE,KAAOH,SAASC,cAAc,yBAOhC,IAAIG,EAAiB,KACnB,MAAMC,EAAcR,GALaS,EAKoB,EALfC,EAKkBV,EAAOW,OAAS,EAJjEC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,KADpB,IAACA,EAAKC,EAMtCb,QAAQC,IAAIU,GACZP,EAAKC,KAAKa,MAAMC,WAAc,GAAER,GAG9BS,EAAa,KAmBjBhB,EAAKI,MAAMa,iBAAiB,QAXH,KACnBD,IAGJA,EAAaE,YAAY,KACvBtB,QAAQC,IAAI,SACZG,EAAKI,MAAMe,UAAW,EACtBb,KACC,QAILN,EAAKK,KAAKY,iBAAiB,QAlBH,KACtBG,cAAcJ,GACdA,EAAa,KACbhB,EAAKI,MAAMe,UAAW,I,kDCvBxB,MAAMnB,EAAO,CACXqB,KAAOnB,SAASC,cAAc,uBAC9BmB,MAAQpB,SAASC,cAAc,wBAC/BoB,KAAOrB,SAASC,cAAc,uBAC9BqB,KAAOtB,SAASC,cAAc,wBA4BhC,SAASsB,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAE,MA1BpB,CACZxB,QACE,MAAMyB,EAAa,IAAIC,KAAK,mBAC5BZ,YAAa,KACX,MAAMa,EAAcD,KAAKE,OAQ/B,SAAsBrC,GACpB,MAAM0B,EAAOI,EAAId,KAAKC,MAAMjB,EAAO,QAC7B2B,EAAQG,EAAId,KAAKC,MAAOjB,EAAO,MAAR,OACvB4B,EAAOE,EAAId,KAAKC,MAAOjB,EAAO,KAAR,MACtB6B,EAAOC,EAAId,KAAKC,MAAOjB,EAAO,IAAe,MAEnDC,QAAQC,IAAK,GAAEwB,KAAQC,KAASC,KAAQC,KAExCxB,EAAKqB,KAAKY,YAAcZ,EACxBrB,EAAKsB,MAAMW,YAAcX,EACzBtB,EAAKuB,KAAKU,YAAcV,EACxBvB,EAAKwB,KAAKS,YAAcT,EAjBpBU,CADkBL,EAAaE,IAE7B,QAGF3B,S,qBCjBN,MAAM+B,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAUnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIlD,SAAQ,SAASC,EAASC,GAM/BD,EAJiBgD,EAASE,IAAIC,GAC5BA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,OAQjEhD,EAASiD,GAAgB/C,QAAQgD,MAAMD,GAS7CL,EAAgBH,EAAO,SAASrC,KAAKJ,GACrC4C,EAAgBH,EAAO,OAAOrC,KAAKJ,K","file":"main.60fbfe7e84efddb98b79.js","sourcesContent":["const delay = ms => {\n  return new Promise ((resolve, reject) => {\n    setTimeout(()=>{resolve(ms)}  , ms);\n    });\n    // return promise;\n  };\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nexport default colors;","import colors from './colors';\n\nconst refs = {\n  body : document.querySelector('body'),\n  start : document.querySelector('[data-action=\"start\"]'),\n  stop : document.querySelector('[data-action=\"stop\"]')\n}\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nlet setRandomColor = () => {\n  const randomColor = colors[randomIntegerFromInterval(0, colors.length - 1)];\n  console.log(randomColor);\n  refs.body.style.background = `${randomColor}`;\n};\n\nlet intervalId = null;\n\nconst stopColorChange = () =>{\n  clearInterval(intervalId);\n  intervalId = null;\n  refs.start.disabled = false;\n}\n\nconst startColorChange = () =>{ \n  if (intervalId){\n    return\n  }\n  intervalId = setInterval(() =>{\n    console.log('start');\n    refs.start.disabled = true;\n    setRandomColor ()\n  }, 1000);\n}\n\nrefs.start.addEventListener('click', startColorChange)\nrefs.stop.addEventListener('click', stopColorChange)","const refs = {\n  days : document.querySelector('[data-value=\"days\"]'),\n  hours : document.querySelector('[data-value=\"hours\"]'),\n  mins : document.querySelector('[data-value=\"mins\"]'),\n  secs : document.querySelector('[data-value=\"secs\"]'),\n};\n\nconst timer = {\n  start() {\n    const futureDate = new Date('January 1, 2021');\n    setInterval (() => {\n      const currentDate = Date.now();\n      const deltaTime = futureDate - currentDate;\n      updateClock(deltaTime);\n      },1000);    \n    },\n};\ntimer.start();\n\nfunction updateClock (time){\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  console.log(`${days}:${hours}:${mins}:${secs}`);\n  \n  refs.days.textContent = days;\n  refs.hours.textContent = hours;\n  refs.mins.textContent = mins;\n  refs.secs.textContent = secs;\n}\nfunction pad(value){\n  return String(value).padStart(2,'0');\n};\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\n// const toggleUserState = (allUsers, userName, callback) => {\n//   const updatedUsers = allUsers.map(user =>\n//     user.name === userName ? { ...user, active: !user.active } : user,\n//   );\n\n//   callback(updatedUsers);\n// };\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise(function(resolve, reject) {\n\n    const updatedUsers = allUsers.map(user =>\n          user.name === userName ? { ...user, active: !user.active } : user,\n        );\n      \n        resolve(updatedUsers);\n\n  })\n}\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n//  */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);"],"sourceRoot":""}